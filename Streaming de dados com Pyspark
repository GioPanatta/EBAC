{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOb5IcX78e7pYUYi6VMCW8D",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/GioPanatta/EBAC/blob/main/Streaming%20de%20dados%20com%20Pyspark\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6 - Crie uma aplicação utilizando dados em Streaming. Evidencie o processo de processamento de dados em tempo real."
      ],
      "metadata": {
        "id": "LtVnfXP9r04I"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8hTOTqhsrNeA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7KXQYWoknw8H",
        "outputId": "d347c211-5609-44ac-baf0-c53b913e8be6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting pyspark\n",
            "  Downloading pyspark-3.4.0.tar.gz (310.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m310.8/310.8 MB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n",
            "Building wheels for collected packages: pyspark\n",
            "  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyspark: filename=pyspark-3.4.0-py2.py3-none-any.whl size=311317130 sha256=18b72c0da9a862effafdd4f3d37cda7e3245015edf87df2930e6c94e4f8dbeae\n",
            "  Stored in directory: /root/.cache/pip/wheels/7b/1b/4b/3363a1d04368e7ff0d408e57ff57966fcdf00583774e761327\n",
            "Successfully built pyspark\n",
            "Installing collected packages: pyspark\n",
            "Successfully installed pyspark-3.4.0\n"
          ]
        }
      ],
      "source": [
        "!pip install pyspark"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Iremos abrir o arquivo csv 'Salary',e criaremos  3 para simular um straming de dados\n",
        "\n",
        "#Mas antes, abaixo, abriremos um sessão Spark "
      ],
      "metadata": {
        "id": "RMKCI0Onn9E7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.sql import SparkSession\n",
        "spark = SparkSession.builder.master(\"local\").appName(\"Streaming\").config('spark.ui.port', '4050').getOrCreate()"
      ],
      "metadata": {
        "id": "6biMBNzIoXu7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Criando um DF que será utilizado com as colunas renomeadas\n",
        "\n",
        "from pyspark.sql.types import *\n",
        "schema = StructType([\n",
        "StructField('idade',IntegerType(),True),\n",
        "StructField('genero', StringType(), True),\n",
        "StructField('educacao', StringType(), True),\n",
        "StructField('ocupacao', StringType(), True),\n",
        "StructField('anos de ocupacao', IntegerType(), True),\n",
        "StructField('salario', FloatType(), True)])\n",
        "\n"
      ],
      "metadata": {
        "id": "6bddLdsQobKF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "salary_df = spark.readStream.format('csv').schema(schema).option('header', True).load('streaming')"
      ],
      "metadata": {
        "id": "yNMRGfjXqZHl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Verificando se o salary_df é um streaming de dados = True\n",
        "print(salary_df.isStreaming)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M0MchsZCqrBG",
        "outputId": "93c43890-ad9b-4d56-ccc5-bc3a94419cd5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "results_df = salary_df.select('*')\n",
        "query = (results_df.writeStream\n",
        ".format('json')\n",
        ".queryName('selectTable')\n",
        ".option('checkpointLocation', 'checkpoint')\n",
        ".option('path', 'results')\n",
        ".outputMode('append')\n",
        ".start()\n",
        ".awaitTermination() \n",
        ")"
      ],
      "metadata": {
        "id": "hmrotscQq0Fu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mnhUcE9aq_0H"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}